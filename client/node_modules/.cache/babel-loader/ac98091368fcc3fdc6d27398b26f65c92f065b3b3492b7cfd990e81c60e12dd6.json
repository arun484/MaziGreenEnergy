{"ast":null,"code":"var _jsxFileName = \"/Users/ai/Documents/GitHub/MaziGreenEnergy2/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../api';\nimport toast from 'react-hot-toast';\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Check authentication status\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Set default authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Verify token by fetching user profile\n      const response = await api.get('/api/auth/profile');\n      setUser(response.data.investor);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        investor\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user\n      setUser(investor);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/register', userData);\n      const {\n        token,\n        investor\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user\n      setUser(investor);\n      toast.success('Registration successful! Welcome to Mazi Green Energy!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  // Update profile function\n  const updateProfile = async data => {\n    try {\n      const response = await api.put('/api/investor/profile', data);\n      setUser(response.data.investor);\n      toast.success('Profile updated successfully');\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Profile update failed';\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n\n  // Google Login function\n  const loginWithGoogle = async token => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/google-login', {\n        token\n      });\n      const {\n        token: jwtToken,\n        investor\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('token', jwtToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n\n      // Set user\n      setUser(investor);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Google login failed';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    loginWithGoogle,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","defaults","headers","common","response","get","data","investor","error","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","errorMessage","register","userData","_error$response2","_error$response2$data","logout","updateProfile","put","_error$response3","_error$response3$data","loginWithGoogle","jwtToken","_error$response4","_error$response4$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ai/Documents/GitHub/MaziGreenEnergy2/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport api from '../api';\nimport toast from 'react-hot-toast';\n\n// Types\ninterface User {\n  id: number;\n  email: string;\n  firstName: string;\n  lastName: string;\n  investmentAmount: number;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  loginWithGoogle: (token: string) => Promise<boolean>;\n  register: (userData: RegisterData) => Promise<boolean>;\n  logout: () => void;\n  updateProfile: (data: Partial<User>) => Promise<boolean>;\n}\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  investmentAmount: number;\n  investmentDate: string;\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Auth provider component\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Check authentication status\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Set default authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Verify token by fetching user profile\n      const response = await api.get('/api/auth/profile');\n      setUser(response.data.investor);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/login', { email, password });\n      \n      const { token, investor } = response.data;\n      \n      // Store token\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Set user\n      setUser(investor);\n      \n      toast.success('Login successful!');\n      return true;\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error || 'Login failed';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (userData: RegisterData): Promise<boolean> => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/register', userData);\n      \n      const { token, investor } = response.data;\n      \n      // Store token\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Set user\n      setUser(investor);\n      \n      toast.success('Registration successful! Welcome to Mazi Green Energy!');\n      return true;\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error || 'Registration failed';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  // Update profile function\n  const updateProfile = async (data: Partial<User>): Promise<boolean> => {\n    try {\n      const response = await api.put('/api/investor/profile', data);\n      setUser(response.data.investor);\n      toast.success('Profile updated successfully');\n      return true;\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error || 'Profile update failed';\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n\n  // Google Login function\n  const loginWithGoogle = async (token: string): Promise<boolean> => {\n    try {\n      setLoading(true);\n      const response = await api.post('/api/auth/google-login', { token });\n      \n      const { token: jwtToken, investor } = response.data;\n      \n      // Store token\n      localStorage.setItem('token', jwtToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n      \n      // Set user\n      setUser(investor);\n      \n      toast.success('Login successful!');\n      return true;\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error || 'Google login failed';\n      toast.error(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    loginWithGoogle,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}